// Mouse and VGA Initialisation

//**************************************//
// VGA Grid Initialisation
@0x00	0x01	//Store 0 in b for y coord
@0x01	0x00
@0x02	0x03	//Store y coord in RAM
@0x03	0x01
@0x04	0x03	//Send y to VGA
@0x05	0xB1
@0x06	0x00	//Store 0 in a for x coord
@0x07	0x00
@0x08	0x02	//Send x coord to VGA
@0x09	0xB0
@0x0A 	0x02	//Store x coord in RAM
@0x0B	0x09
@0x0C	0x01	//Load y coord to b
@0x0D	0x01
@0x0E	0x00	//Load 39 to a
@0x0F	0x07
@0x10	0x96	//y coord=39??
@0x11	0x37	//(line 56)
@0x12	0x00	//Load 79 to a
@0x13	0x08
@0x14	0x96	//y coord = 79???
@0x15	0x37	//(Line 56)
@0x16	0x00	//Load x coord
@0x17	0x09
@0x18	0x01	//Load 52 in b
@0x19	0x02
@0x1A	0x96	//x coord =52??
@0x1B	0x27	//ADDRESS (incrementing x) (line 40)
@0x1C	0x01	//Load 106 in b
@0x1D	0x03
@0x1E	0x96	//x coord = 106?
@0x1F	0x27	//ADDRSS (incrementing x) (line 40)
@0x20	0x01	//Load 160 in b
@0X21	0x04
@0x22	0xA6	//x coord >160?
@0x23	0x2E	//ADDRESS (incrementing y) (line 47)
@0x24	0x54	//increase x
@0x25	0x07	//GO TO checking x coord
@0x26	0x08
@0x27	0x01	//Load 1 for pixel
@0x28	0x05
@0x29	0x03	//Send pixel to VGA
@0x2A	0xB2	
@0x2B	0x54	//increment x
@0x2C	0x07	//GO TO- checking x coord
@0x2D	0x08	//(line 8)
@0x2E	0x01	//load y coord to b
@0x2F	0x01
@0x30	0x65	//y co +1 (stored in b)
@0x31	0x00	//load 120 to a
@0x32	0x06
@0x33	0xB6	//120<y coord
@0x34	0x3F	//Finishing Writing Grid - Go to Start of Mouse Interrupt***
@0x35	0x07	//GO TO -store y coord
@0x36	0x02
@0x37	0x01	//load one for pixel
@0x38	0x05
@0x39	0x03	//Send to VGA
@0x3A	0xB2
@0x3B	0x00	//Load x coord
@0x3C	0x09
@0x3D	0x07	//G0 TO check x<160
@0x3E	0x20	//


//*****************************************//
// Mouse Initialisation

// Write Status Byte to LEDs
@0x3F   0x00 
@0x40   0xA0 	// Read Value of Mouse Status into Reg A
@0x41   0x02 
@0x42   0xC0	// Write Value of Reg A to LED Base Address

// Write Scroll Wheel to LEDs and Colour
@0x43   0x00 
@0x44   0xA3 	// Read Value of Mouse Scroll Wheel into Reg A
@0x45   0x02 
@0x46   0xC1	// Write Value of Reg A to LED Upper Address
@0x47	0x02
@0x48	0xB3	// Write Value of Reg A to VGA Colour

// Delete Previous Cursor Position
@0x49   0x00 
@0x4A   0x0A	// Read Old Mouse X Position from RAM into Reg A
@0x4B   0x01 
@0x4C   0x0B	// Read Old Mouse Y Position from RAM into Reg B
@0x4D   0x02 
@0x4E   0xB0	// Write Value of Reg A to VGA X Coordinate
@0x4F	0x03 
@0x50	0xB1	// Write Value of Reg B to VGA Y Coordinate
@0x51   0x00 
@0x52   0x00	// Read "0" from RAM into Reg A
@0x53   0x02 
@0x54   0xB2	// Write Value of Reg A to VGA Pixel

// Write New Cursor Position to VGA
@0x55   0x00 	
@0x56   0xA1	// Read Value of Live Mouse X Position into Reg A
@0x57   0x01 
@0x58   0xA2	// Read Value of Live Mouse Y Position into Reg B
@0x59   0x02 
@0x5A   0xD0	// Write Value of Reg A to 7 Segment (Lower Digits)
@0x5B   0x03 
@0x5C   0xD1	// Write Value of Reg B to 7 Segment (Upper Digits)

@0x5D   0x02 
@0x5E   0xB0	// Write Value of Reg A to VGA X Coordinate
@0x5F   0x03 
@0x60   0xB1	// Write Value of Reg B to VGA Y Coordinate

@0x61   0x02 
@0x62   0x0A	// Write Value of Reg A to RAM Address
@0x63   0x03 
@0x64   0x0B	// Write Value of Reg B to RAM Address

@0x65   0x00 	
@0x66   0x05	// Read "1" from RAM into Reg A
@0x67   0x02 	
@0x68   0xB2	// Write value of Reg A to VGA Pixel

@0x69	0x08	// Go to IDLE


// Mouse Interrupt
@0xFF	0x00	// Upon Mouse Interrupt Go To this Address



